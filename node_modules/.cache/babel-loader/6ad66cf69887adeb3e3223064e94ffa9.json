{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Downloads\\\\frontend\\\\src\\\\Components\\\\User\\\\UserDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport NavbarComp from '../Navbar/NavbarComp';\nimport { useNavigate } from 'react-router-dom';\nimport { createAxios } from '../../Hooks/UseAxios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Container = _styled.section.withConfig({\n  displayName: \"UserDashboard__Container\",\n  componentId: \"sc-y0ul4s-0\"\n})([\"margin:0 auto;box-sizing:border-box;height:90vh;box-sizing:border-box;display:flex;justify-content:center;img{width:90%;}@media (max-width:500px){align-items:center;img{max-width:380px;}}\"]);\n\n_c = Container;\nexport default function UserDashboard() {\n  _s();\n\n  var _parsedUser$user, _parsedUser$user$role;\n\n  const navigate = useNavigate(); //check user role\n\n  const user = localStorage.getItem('user');\n  const parsedUser = JSON.parse(user);\n  const userRole = parsedUser === null || parsedUser === void 0 ? void 0 : (_parsedUser$user = parsedUser.user) === null || _parsedUser$user === void 0 ? void 0 : (_parsedUser$user$role = _parsedUser$user.role[0]) === null || _parsedUser$user$role === void 0 ? void 0 : _parsedUser$user$role.roleName;\n  useEffect(() => {\n    if (!user || userRole !== 'User') {\n      navigate('/');\n    }\n  }, [userRole]);\n\n  const fetchAdminData = async () => {\n    const token = parsedUser.jwtToken; // console.log(token)\n\n    const apiUrl = 'http://localhost:8080';\n    const authAxios = createAxios(apiUrl, token);\n    const data = await authAxios.get('/forUser'); // console.log(data)\n  };\n\n  useEffect(() => {\n    if (user && userRole === 'User') fetchAdminData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarComp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"userdashboard.png\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UserDashboard, \"khgsfvlVLpWikUdAayORL272oMo=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = UserDashboard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"UserDashboard\");","map":{"version":3,"names":["React","useEffect","NavbarComp","useNavigate","createAxios","Container","styled","section","UserDashboard","navigate","user","localStorage","getItem","parsedUser","JSON","parse","userRole","role","roleName","fetchAdminData","token","jwtToken","apiUrl","authAxios","data","get"],"sources":["C:/Users/LENOVO/Downloads/frontend/src/Components/User/UserDashboard.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport NavbarComp from '../Navbar/NavbarComp'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { createAxios } from '../../Hooks/UseAxios'\r\nimport styled from 'styled-components/macro'\r\n\r\nconst Container = styled.section`\r\n  /* border: 1px solid olive; */\r\n  /* max-width: 1000px; */\r\n  margin: 0 auto;\r\n  box-sizing: border-box;\r\n\r\n  height: 90vh;\r\n  box-sizing: border-box;\r\n  /* background: rgb(248, 249, 255); */\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  img {\r\n    width: 90%;\r\n    /* height: 80%; */\r\n    /* max-width: 1100px; */\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    align-items: center;\r\n    img {\r\n      max-width: 380px;\r\n      /* max-height: 50%; */\r\n    }\r\n  }\r\n`\r\n\r\nexport default function UserDashboard() {\r\n  const navigate = useNavigate()\r\n\r\n  //check user role\r\n  const user = localStorage.getItem('user')\r\n  const parsedUser = JSON.parse(user)\r\n  const userRole = parsedUser?.user?.role[0]?.roleName\r\n  useEffect(() => {\r\n    if (!user || userRole !== 'User') {\r\n      navigate('/')\r\n    }\r\n  }, [userRole])\r\n\r\n  const fetchAdminData = async () => {\r\n    const token = parsedUser.jwtToken\r\n    // console.log(token)\r\n    const apiUrl = 'http://localhost:8080'\r\n    const authAxios = createAxios(apiUrl, token)\r\n\r\n    const data = await authAxios.get('/forUser')\r\n\r\n    // console.log(data)\r\n  }\r\n  useEffect(() => {\r\n    if (user && userRole === 'User') fetchAdminData()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <NavbarComp />\r\n      <Container>\r\n        <img src='userdashboard.png' alt='logo' />\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,sBAA5B;;;;AAGA,MAAMC,SAAS,GAAGC,OAAM,CAACC,OAAV;EAAA;EAAA;AAAA,mMAAf;;KAAMF,S;AA2BN,eAAe,SAASG,aAAT,GAAyB;EAAA;;EAAA;;EACtC,MAAMC,QAAQ,GAAGN,WAAW,EAA5B,CADsC,CAGtC;;EACA,MAAMO,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;EACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAnB;EACA,MAAMM,QAAQ,GAAGH,UAAH,aAAGA,UAAH,2CAAGA,UAAU,CAAEH,IAAf,8EAAG,iBAAkBO,IAAlB,CAAuB,CAAvB,CAAH,0DAAG,sBAA2BC,QAA5C;EACAjB,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,IAAD,IAASM,QAAQ,KAAK,MAA1B,EAAkC;MAChCP,QAAQ,CAAC,GAAD,CAAR;IACD;EACF,CAJQ,EAIN,CAACO,QAAD,CAJM,CAAT;;EAMA,MAAMG,cAAc,GAAG,YAAY;IACjC,MAAMC,KAAK,GAAGP,UAAU,CAACQ,QAAzB,CADiC,CAEjC;;IACA,MAAMC,MAAM,GAAG,uBAAf;IACA,MAAMC,SAAS,GAAGnB,WAAW,CAACkB,MAAD,EAASF,KAAT,CAA7B;IAEA,MAAMI,IAAI,GAAG,MAAMD,SAAS,CAACE,GAAV,CAAc,UAAd,CAAnB,CANiC,CAQjC;EACD,CATD;;EAUAxB,SAAS,CAAC,MAAM;IACd,IAAIS,IAAI,IAAIM,QAAQ,KAAK,MAAzB,EAAiCG,cAAc;EAChD,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE;IAAA,wBACE,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAA,uBACE;QAAK,GAAG,EAAC,mBAAT;QAA6B,GAAG,EAAC;MAAjC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAQD;;GAnCuBX,a;UACLL,W;;;MADKK,a"},"metadata":{},"sourceType":"module"}